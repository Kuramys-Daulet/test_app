
import type { Topology, TopologyType } from '../types.ts';
import BusAnimation from '../components/animations/BusAnimation.tsx';
import StarAnimation from '../components/animations/StarAnimation.tsx';
import RingAnimation from '../components/animations/RingAnimation.tsx';
import MeshAnimation from '../components/animations/MeshAnimation.tsx';
import TreeAnimation from '../components/animations/TreeAnimation.tsx';
import HybridAnimation from '../components/animations/HybridAnimation.tsx';

export const TOPOLOGY_TYPES: TopologyType[] = ['Bus', 'Star', 'Ring', 'Mesh', 'Tree', 'Hybrid'];

export const TOPOLOGIES: Topology[] = [
  {
    id: 'Bus',
    name: 'Шина (Bus Topology)',
    description: 'Бұл топологияда барлық құрылғылар (компьютерлер, принтерлер және т.б.) **шина** немесе **магистраль** деп аталатын бір ортақ кабельге қосылған. Бұл кабельдің ұштарында сигналдың шағылысуын болдырмай, оны сіңіретін арнайы бітеуіштер — **терминаторлар** бар.',
    dataTransmission: 'Бір компьютер деректерді жібергенде, бұл сигнал шинаның бүкіл ұзындығы бойынша екі жаққа да таралады. Барлық басқа құрылғылар бұл сигналды "естиді", бірақ оны тек өзіне арналған құрылғы ғана қабылдайды. Бір мезетте деректерді тек бір құрылғы ғана жібере алады, әйтпесе **коллизия** (сигналдардың соқтығысуы) пайда болады.',
    advantages: [
      '**Орнатудың қарапайымдылығы және арзандығы:** Ең аз кабель мөлшері қажет.',
      '**Жаңа құрылғыларды қосудың оңайлығы:** Жаңа құрылғыны шинаның кез келген бос жеріне қосуға болады.',
    ],
    disadvantages: [
      '**Сенімділіктің төмендігі:** Негізгі кабельдің (шинаның) зақымдануы бүкіл желіні істен шығарады.',
      '**Ақауларды табудың қиындығы:** Қай компьютер немесе кабельдің қай бөлігі мәселе тудырып тұрғанын анықтау қиын.',
      '**Өнімділіктің төмендеуі:** Желіде құрылғылар неғұрлым көп болса, соғұрлым коллизиялар жиі болады және желі баяу жұмыс істейді.',
    ],
    analogy: 'Жаңа жылдық гирлянда сияқты, онда барлық шамдар (құрылғылар) бір ортақ сымға ілінген. Егер сымды кез келген жерден кессе, бүкіл гирлянда сөніп қалады.',
    visualizationIdea: 'Тік сызық (шина), одан компьютер белгішелеріне қарай қысқа сызықтар тарайды.',
    AnimationComponent: BusAnimation,
  },
  {
    id: 'Star',
    name: 'Жұлдыз (Star Topology)',
    description: 'Бұл бүгінгі күні ең танымал топология. Желінің ортасында арнайы құрылғы — **концентратор (хаб)** немесе одан да заманауи **коммутатор (свитч)** орналасқан. Желідегі әрбір компьютер осы орталық құрылғыға жеке кабель арқылы қосылады.',
    dataTransmission: 'Компьютер деректерді жібергенде, оларды барлығына емес, тек орталық құрылғыға жібереді. Ал ол өз кезегінде бұл деректерді нақты алушыға қайта бағыттайды. Бұл "шинаға" қарағанда әлдеқайда ақылды және бірнеше жұп құрылғының бір уақытта байланысуына мүмкіндік береді (коммутатор жағдайында).',
    advantages: [
      '**Жоғары сенімділік:** Бір компьютердің істен шығуы немесе оның кабелінің зақымдануы қалған желінің жұмысына әсер етпейді.',
      '**Қызмет көрсетудің қарапайымдылығы:** Ақауды табу оңай, себебі мәселе әдетте компьютерде, оның кабелінде немесе концентратор портында болады.',
      '**Жақсы өнімділік:** Коллизиялар минимумға дейін азайтылған (коммутатормен), және желі оңай кеңейтіледі.',
    ],
    disadvantages: [
      '**Жоғары құн:** "Шинаға" қарағанда көбірек кабель қажет, сонымен қатар орталық құрылғыға кететін шығындар бар.',
      '**Орталықтандырылған істен шығу нүктесі:** Егер орталық концентратор немесе коммутатор істен шықса, бүкіл желі жұмысын тоқтатады.',
    ],
    analogy: 'Әуежай-хаб. Барлық ұшақтар (деректер) А қаласынан Б қаласына тікелей ұшпайды, олар рейстерді қажетті бағыттарға бөлетін орталық ірі әуежай (концентратор) арқылы ұшады.',
    visualizationIdea: 'Ортада коммутатор белгішесі, одан сәулелер тәрізді компьютер белгішелеріне сызықтар тарайды.',
    AnimationComponent: StarAnimation,
  },
  {
    id: 'Ring',
    name: 'Сақина (Ring Topology)',
    description: 'Бұл топологияда барлық құрылғылар бір-біріне тізбектей қосылып, тұйықталған **сақина** құрайды. Деректер бір құрылғыдан екіншісіне шеңбер бойымен бір бағытта беріледі.',
    dataTransmission: 'Ақпарат сақина бойымен әрбір компьютер арқылы қозғалады. Деректерді жібермес бұрын, компьютер желіні "тыңдайды". Егер ол бос болса, ол алушының мекенжайы бар деректер пакетін жібереді. Пакет мекенжайға жеткенше компьютерден компьютерге өтеді. Коллизияларды болдырмау үшін жиі арнайы маркерлік қатынау әдісі қолданылады.',
    advantages: [
      '**Тұрақты өнімділік:** Үлкен жүктемелерде де жақсы жұмыс істейді, себебі коллизиялар жоқ.',
      '**Қарапайымдылық:** Әрбір құрылғы тек екі "көршімен" ғана жалғанған.',
    ],
    disadvantages: [
      '**Сенімділіктің төмендігі:** Бір компьютердің істен шығуы немесе кабельдің үзілуі сақинаны бұзып, бүкіл желіні тоқтатады.',
      '**Қосылудың күрделілігі:** Компьютерді қосу немесе алып тастау үшін бүкіл желінің жұмысын уақытша тоқтатып, сақинаны үзу керек.',
      '**Беріліс кідірісі:** Сигнал барлық аралық компьютерлерден өтеді, бұл жеткізуді баяулатуы мүмкін.',
    ],
    analogy: 'Хоровод. Адамдар (құрылғылар) қол ұстасып, затты (деректерді) шеңбер бойымен тек бір бағытта, көршіден көршіге бере алады.',
    visualizationIdea: 'Шеңбер бойымен орналасқан және сызықтармен қосылған компьютерлер.',
    AnimationComponent: RingAnimation,
  },
  {
    id: 'Mesh',
    name: 'Тор (Mesh Topology)',
    description: '**Толық байланысқан (Full Mesh)** топологияда желідегі әрбір құрылғы басқаларының барлығымен тікелей жалғанған. **Ішінара байланысқан (Partial Mesh)** топологияда кейбір құрылғылар барлығымен, ал кейбіреулері тек ең маңызды немесе ең жақын түйіндермен жалғанған.',
    dataTransmission: 'Деректер жіберушіден алушыға көптеген әртүрлі жолдармен жетуі мүмкін. Желі ең қысқа немесе ең аз жүктелген маршрутты автоматты түрде таңдай алады. Егер жолдардың бірі үзілсе, деректер жай ғана басқа жолмен кетеді.',
    advantages: [
      '**Максималды сенімділік және істен шығуға төзімділік:** Бір байланыстың немесе тіпті құрылғының істен шығуы жалпы желінің жұмысына әсер етпейді.',
      '**Жоғары жылдамдық:** Деректер тікелей және қысқа жолдармен беріледі.',
    ],
    disadvantages: [
      '**Өте жоғары құн және күрделілік:** Өте көп кабельдер мен қосылу порттарын қажет етеді. Баптауда өте күрделі.',
      '**Кеңейтудің күрделілігі:** Жаңа құрылғыны қосу оны барлық бұрыннан бар құрылғылармен жалғауды талап етеді.',
    ],
    analogy: 'Өрмекші торы немесе әлеуметтік желі. Әрбір нүкте (адам/құрылғы) басқа көптеген нүктелермен тікелей байланысты болуы мүмкін, бұл күрделі және берік құрылымды жасайды. Ақпарат мақсатқа жету үшін көптеген жолдарды таба алады.',
    visualizationIdea: 'Бірнеше компьютер, әрқайсысынан әрқайсысына байланыс сызығы тартылған.',
    AnimationComponent: MeshAnimation,
  },
  {
    id: 'Tree',
    name: 'Ағаш (Tree Topology)',
    description: 'Бұл топология "жұлдыз" және "шина" топологияларының комбинациясы болып табылады. Оның иерархиялық құрылымы бар. Бас **түбірлік түйін** бар, одан басқа түйіндерге (мысалы, концентраторларға) тармақтар тарайды, ал олар өз кезегінде одан әрі тармақталады.',
    dataTransmission: 'Деректер иерархия бойынша ортақ түйінге дейін жоғары беріледі, содан кейін мақсатты құрылғыға қарай төмен түседі. Шын мәнінде, бұл бір-біріне қосылған бірнеше "жұлдыз".',
    advantages: [
      '**Жақсы кеңейтілу:** Желінің жаңа сегменттерін (жаңа "жұлдыздарды") қосу оңай.',
      '**Басқарудың және ақауларды табудың қарапайымдылығы:** Желі логикалық сегменттерге бөлінген, бұл әкімшілендіруді жеңілдетеді.',
    ],
    disadvantages: [
      '**Түбірге тәуелділік:** Егер түбірлік түйін немесе негізгі магистраль істен шықса, желінің үлкен сегменттері қолжетімсіз болады.',
      '**Күрделілік және құн:** "Жұлдыз" немесе "шинаға" қарағанда көбірек кабель және күрделірек баптауды қажет етеді.',
    ],
    analogy: 'Генеалогиялық ағаш. Бас "ата-баба" (түбірлік түйін) бар, одан "балаларға" (аралық түйіндер) тармақтар тарайды, ал олардан — "немерелерге" (соңғы құрылғылар).',
    visualizationIdea: 'Төңкерілген ағашқа ұқсайтын иерархиялық құрылым.',
    AnimationComponent: TreeAnimation,
  },
  {
    id: 'Hybrid',
    name: 'Гибридті (Hybrid Topology)',
    description: 'Атауынан көрініп тұрғандай, бұл екі немесе одан да көп әртүрлі топологиялардың комбинациясы. Мысалы, бір кеңседе "жұлдыз" желісі, екіншісінде де "жұлдыз" болуы мүмкін, ал бұл екі "жұлдыз" бір-бірімен ортақ "шинамен" жалғанған.',
    dataTransmission: 'Беріліс принципі жіберуші мен алушының желінің қай сегментінде орналасқанына байланысты. Әрбір сегменттің ішінде оның өз топологиясының ережелері қолданылады.',
    advantages: [
      '**Икемділік:** Әртүрлі топологиялардың күшті жақтарын пайдаланып, олардың кемшіліктерін жоюға болады.',
      '**Кеңейтілу:** Сәйкес топологиясы бар жаңа сегменттерді қосу арқылы желіні кеңейту өте оңай.',
    ],
    disadvantages: [
      '**Жобалау мен басқарудың күрделілігі:** Дұрыс құру және әкімшілендіру үшін терең білімді қажет етеді.',
      '**Жоғары құн:** Әдетте күрделі желілік жабдықты қажет ететіндіктен, ең қымбат нұсқалардың бірі болып табылады.',
    ],
    analogy: 'Заманауи қала. Тұрғын аудандарда бір қозғалыс сызбасы ("жұлдыз") болуы мүмкін, ал олар бір-бірімен жылдамдығы жоғары магистральдармен ("шина") жалғанады.',
    visualizationIdea: 'Мысалы, екі "жұлдыз" құрылымының бір "шина" сызығына қалай қосылғанын көрсететін сызба.',
    AnimationComponent: HybridAnimation,
  },
];